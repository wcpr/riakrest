= RiakRest

http://github.com/wcpr/riakrest

== DESCRIPTION:

RiakRest provides structured, RESTful interaction with a Riak document
store.

== RIAK:

Riak[http://riak.basho.com] is an open-source project developed and maintained
by the fine folks at Basho[http://www.basho.com]. It combines a decentralized
key-value store, a flexible map/reduce engine, and a friendly HTTP/JSON query
interface to provide a database ideally suited for Web applications. RiakRest
interacts with the HTTP/JSON query interface, which is called Jiak.

== SYNOPSIS:

RiakRest provides structured, RESTful interaction with the HTTP/JSON interface
of a Riak[http://riak.basho.com] document data store. RiakRest provides two
levels of interaction: Core Client and Resource. Core Client works at the Jiak
level and exposes Jiak internals. JiakResource is an abstraction built on top
of the Core Client that gives a true RESTful feel.

== REQUIREMENTS:

RestClient is used for REST server interaction

JSON is used for data exchange.

Riak[http://riak.basho.com] provides the HTTP/JSON Jiak interface and data
store.

== INSTALL:

sudo gem install riakrest

== EXAMPLE
  require 'riakrest'
  include RiakRest

  PersonData = JiakDataHash.create(:name,:age)
  PersonData.keygen :name

  class Person
    include JiakResource
    server      'http://localhost:8002/jiak'
    group       'people'
    data_class  PersonData
    auto_post   true
    auto_update true
  end

  remy = Person.new(:name => 'remy',:age => 10) #            (auto-post)
  puts remy.name                                # => "remy"

  puts Person.get('remy').name                  # => "remy"  (from Jiak server)
  puts Person.get('remy').age                   # => 10      (from Jiak server)

  remy.age = 11                                 #            (auto-update)
  puts Person.get('remy').age                   # => 11      (from Jiak server)

  callie = Person.new(:name => 'Callie', :age => 13)
  remy.link(callie,'sister')                    # link from remy to callie

  sisters = remy.query(Person,'sister')         # use link to get 'sister'
  puts sisters[0].eql?(callie)                  # => true

  remy.delete
  callie.delete

== LICENSE:

Copyright (c) 2009 Paul Rogers, DingoSky. See LICENCE for details.

===Go forth and Riak!
